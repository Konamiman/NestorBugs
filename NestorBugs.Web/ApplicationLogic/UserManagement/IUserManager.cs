using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Konamiman.NestorBugs.CrossCutting.DependencyInjection;
using Konamiman.NestorBugs.Data.Entities;

namespace Konamiman.NestorBugs.Web.ApplicationLogic.UserManagement
{
    /// <summary>
    /// Represents a class for performing user related operations.
    /// This class accesses the database as necessary (via repositories),
    /// but does NOT interact with cache.
    /// </summary>
    [RegisterInDependencyInjector(typeof(UserManager))]
    public interface IUserManager
    {
        /// <summary>
        /// Checks if there is a registered user with the specified user name,
        /// and if not, registers the user with the default display name
        /// ("user" plus the autogenerated user id number).
        /// </summary>
        /// <param name="userName"></param>
        /// <returns>True if the user has been created,
        /// false if the user existed already.</returns>
        bool CreateUserIfNotExists(string userName);

        /// <summary>
        /// Gets the user having the given display name, or null if there is none.
        /// </summary>
        /// <param name="userName"></param>
        /// <returns></returns>
        User GetUserByName(string userName);

        /// <summary>
        /// Updates the specified user.
        /// </summary>
        /// <param name="user"></param>
        /// <returns>True on correct update, false if there is another user with the same display name.</returns>
        bool UpdateUser(User user);
    }
}
